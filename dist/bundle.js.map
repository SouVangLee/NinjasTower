{"version":3,"sources":["webpack://NinjasCastle/./src/index.js"],"names":[],"mappings":";;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,SAAS,+BAA+B;;AAExC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA,2DAA2D,WAAW;AACtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC","file":"bundle.js","sourcesContent":["// const Player = require(\"./assets/classes/player.js\");\n// const Game = require(\"./assets/classes/game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvas = document.getElementById(\"canvas\");\n  const ctx = canvas.getContext('2d');\n  canvas.width = 600;\n  canvas.height = 800;\n  let playMusic = document.getElementById('music-play');\n  let muteMusic = document.getElementById('music-mute');\n  let score = document.getElementById('score');\n  let totalScore = document.getElementById('total-score');\n  let endGame = document.getElementById('game-over');\n  let song = document.getElementById('song');\n\n\n  const game = new Game();\n  const { player, obstacles, platforms } = game;\n\n  //////////////////////////////////////////////////////////////////////////\n  ///////////////  create sprite images     ////////////////////////////////\n  // run sprite size 73x92\n  const playerRunSprite = new Image();\n  playerRunSprite.src = \"./src/assets/images/ninja_run.png\";\n\n  //idle sprite size 46x88\n  const playerIdleSprite = new Image();\n  playerIdleSprite.src = \"./src/assets/images/ninja_idle.png\"\n\n  //jump sprite size 72x97\n  const playerJumpSprite = new Image();\n  playerJumpSprite.src = \"./src/assets/images/ninja_jump.png\"\n\n  const background = new Image();\n  background.src = \"./src/assets/images/background.png\"\n\n  //platform sprite size 95x30\n  const platformImg = new Image();\n  platformImg.src = \"./src/assets/images/platform.png\";\n\n  //kunai size 64x13;\n  const kunaiLeftRightImg = new Image();\n  kunaiLeftRightImg.src = \"./src/assets/images/kunai_left_right.png\";\n\n  //////////////////////////////////////////////////////////////////////////\n  ///////////////////       Music Functions     ////////////////////////////\n  function musicOn() {\n    if (!muteMusic.classList.contains('hidden')) {\n      muteMusic.classList.add('hidden');\n    }\n    if (playMusic.classList.contains('hidden')) {\n      playMusic.classList.remove('hidden');\n    }\n    game.startMusic = true;\n    song.play();\n  }\n\n  function musicOff() {\n    if (!playMusic.classList.contains('hidden')) {\n      playMusic.classList.add('hidden');\n    }\n    if (muteMusic.classList.contains('hidden')) {\n      muteMusic.classList.remove('hidden');\n    }\n    game.startMusic = false;\n    song.pause();\n  }\n\n  playMusic.onclick = musicOff;\n  muteMusic.onclick = musicOn;\n\n  //////////////////////////////////////////////////////////////////////////\n  ///////////////////       Draw Functions     ////////////////////////////\n  //render obstacles\n  function drawObstacles() {\n    obstacles.forEach(obstacle => {\n      obstacle.frameX = (obstacle.dir === 'LEFT') ?  1 : 0;\n      \n      // ctx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n      ctx.drawImage(\n        kunaiLeftRightImg, \n        obstacle.width * obstacle.frameX, \n        obstacle.height * obstacle.frameY, \n        obstacle.width, \n        obstacle.height, \n        obstacle.x, \n        obstacle.y, \n        obstacle.width,\n        obstacle.height\n      );\n    });\n  }\n  \n\n  // render platforms\n  function drawPlatforms() {\n      platforms.forEach(platform => {\n        ctx.drawImage(platformImg, platform.x, platform.y, platform.width, platform.height)\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  /////////////////// Event Listener ////////////////////////////////\n  window.addEventListener(\"keydown\", (e) => {\n    const GAMEKEYS = ['ArrowRight', 'ArrowLeft', ' ']\n\n    let splash = document.getElementById('splash-container');\n    if (!splash.classList.contains('hidden')) {\n      splash.classList.add('hidden');\n    }\n\n    //start Game\n    if (!game.startGame) {\n      game.startGame = true;\n      game.startMusic = true;\n      gameStart(60);\n      musicOn();\n    }\n    \n    if (game.gameOver) {\n      restart();\n    }\n\n    if (GAMEKEYS.includes(e.key) && e.key !== ' ') {\n      player.KEYS[e.key] = true;\n      player.moving = true;\n      player.currentKey = e.key;\n    };\n\n    if (e.key === ' ') {\n      player.jumping = true;\n    }\n  });\n\n  window.addEventListener(\"keyup\", (e) => {\n    player.KEYS[e.key] = false;\n    player.moving = false;\n    player.jumping = false;\n  });\n\n\n  //////////////////////////////////////////////////////////////////////\n  /////////////////////    Animate Function    /////////////////////////\n  // set FPS rate\n  let fpsInterval, current, then, elapsed;\n\n  function startPlayerAnimation(fps) {\n    fpsInterval = 1000/fps;\n    then = Date.now();\n    animateGame();\n  }\n\n  function animateGame() {\n    requestAnimate = requestAnimationFrame(animateGame);\n    current = Date.now();\n    elapsed = current - then;\n    let spriteChecker;\n\n    getScore();\n\n    if (elapsed > fpsInterval) {\n      then = current - (elapsed % fpsInterval);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      spriteChecker = playerIdleSprite;\n      ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\n      drawPlatforms();\n\n      //render idle frame\n      if (!player.moving && !player.jumping) {\n        //switch idle sprite: ArrowRight = face right, ArrowLeft = face left\n        if (player.currentKey === 'ArrowRight') {\n          player.frameX = 11;\n        } else {\n          player.frameX = 0;\n        }\n        player.frameY = 0;\n        player.width = 46;\n        player.height = 88;\n\n        //render moving sprite: 1 = face right, 0 = face reft\n      } else if (player.moving && !player.jumping) {\n        if (player.currentKey === 'ArrowRight') {\n          player.frameY = 1;\n        } else {\n          player.frameY = 0;\n        }\n        player.width = 73;\n        player.height = 92;\n        spriteChecker = playerRunSprite;\n\n        //render jump sprite: 1 = face right, 0 = face reft\n      } else {\n        if (player.currentKey === 'ArrowRight') {\n          player.frameY = 1;\n        } else {\n          player.frameY = 0;\n        }\n        player.frameX = 4;\n        player.width = 72;\n        player.height = 97;\n        spriteChecker = playerJumpSprite;\n      }\n\n      //ctx.drawImage(img, sX, sY, sW, sH, dX, dY, dW, dH);\n      ctx.drawImage(\n        spriteChecker, \n        player.width * player.frameX, \n        player.height * player.frameY, \n        player.width, \n        player.height, \n        player.x, \n        player.y, \n        player.width,\n        player.height\n      );\n      \n      if (player.moving && !player.jumping) { \n        game.handleFrame();\n      }\n      game.movePlayer();\n      drawObstacles();\n      \n      if (game.startTimer === 0) {\n        clearGameTimer();\n        game.movePlatforms();\n        game.moveObstacle();\n      }\n\n      if (game.startTimer === 0 && game.obstacleTimer % 50 === 0) {\n        game.obstacleTimer = 0;\n        game.createObstacle();\n      }\n    }\n\n    ///////////   Game Over   /////////////////////\n    let playerHitboxX = player.x + 20;\n    let playerHitboxY = player.y + 10;\n    let playerHitboxLength = player.x + player.width;\n    let playerHitboxHeight = player.y + player.height;\n\n    obstacles.forEach(obstacle => {\n      let obstacleLength = obstacle.x + obstacle.width;\n      let obstacleHeight = obstacle.y + obstacle.height;\n\n      //if player falls off the map\n      if ((player.y > canvas.height) ||\n\n          //check for object collision\n          (obstacle.dir === \"LEFT\" && \n          obstacleLength >= playerHitboxX &&\n          obstacleLength <= playerHitboxLength &&\n          obstacleHeight >= playerHitboxY &&\n          obstacleHeight <= playerHitboxHeight) ||\n\n          (obstacle.dir === \"RIGHT\" &&\n          obstacle.x >= player.x &&\n          obstacle.x <= (playerHitboxLength - 30) &&\n          obstacle.y >= player.y &&\n          obstacle.y <= player.y + player.height - 10)) {\n\n            window.cancelAnimationFrame(requestAnimate);\n            gameOver();\n            clearObstacle();\n            return game.score;\n      }\n    });\n\n  };\n\n  function getScore() {\n    document.getElementById(\"score\").innerHTML = `Score: ${game.score}`\n  }\n\n  //////////////////////////////////////////////////////////\n  ///////////    Obstacle Intervals Timer   ///////////////\n  var startObstacle = setInterval(addObstaclesTimer, 15);\n\n  function addObstaclesTimer() {\n    game.obstacleTimer += 1;\n  }\n\n  function clearObstacle() {\n    clearInterval(startObstacle);\n  }\n\n  ///////////////////////////////////////////////////////\n  ///////////   Start Game Timer    /////////////////////\n  var startGameTimer = setInterval(gameTimer, 1000);\n  \n  function gameTimer() {\n    game.startTimer -= 1;\n  }\n\n  function clearGameTimer() {\n    clearInterval(startGameTimer);\n  }\n\n  //////////////////////////////////////////////////////\n  ////////////////   Play Game Functions  /////////////////////\n  function gameStart(fps) {\n    if (score.classList.contains('hidden')) {\n      score.classList.remove('hidden');\n    }\n    if (!totalScore.classList.contains('hidden')) {\n      totalScore.classList.add('hidden');\n    }\n    if (!endGame.classList.contains('hidden')) {\n      endGame.classList.add('hidden');\n    }\n    game.score = 0;\n    startPlayerAnimation(fps);\n  }\n\n  function gameOver() {\n    game.gameOver = true;\n    if (!score.classList.contains('hidden')) {\n      score.classList.add('hidden');\n    }\n    if (totalScore.classList.contains('hidden')) {\n      totalScore.innerHTML = `Total Score: ${game.score}`\n      totalScore.classList.remove('hidden');\n    }\n    if (endGame.classList.contains('hidden')) {\n      endGame.classList.remove('hidden');\n    }\n  }\n\n  function restart() {\n    game.obstacles = [];\n    game.score = 0;\n    game.startGame = false;\n    game.gameOver = false;\n    if (!endGame.classList.contains('hidden')) {\n      endGame.classList.add('hidden');\n    }\n    window.location.reload();\n  }\n\n});\n"],"sourceRoot":""}